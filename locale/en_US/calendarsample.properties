# NLS_ENCODING=UTF-8
# NLS_MESSAGEFORMAT_NONE

# Calendar Sample
#######################################

# The default summary of a newly created event 
calendarsample.default.summary=New Event

# Main panel title
calendarsample.application.title=Calendar

# The two following properties are used by the sample launcher
calendarsample.application.name=Calendar
calendarsample.application.description = This sample shows a calendar application that displays meetings, appointments and other events for personal and professional calendars. Events can be added, deleted, moved, resized and their properties can be edited.

# buttons labels to show a day, week, work week or month
calendarsample.button.Today=Today
calendarsample.button.Day=Day
calendarsample.button.WorkWeek=Work Week
calendarsample.button.Week=Week
calendarsample.button.Month=Month

# A button label to edit a rule
calendarsample.properties.button.edit=Edit

# The Legend panel title
calendarsample.title.Legend=Calendars

# The Event properties panel title
calendarsample.title.EventPanel=Event Properties

calendarsample.title.Properties=Properties

calendarsample.properties.NewEvent=New Event
calendarsample.properties.tip.NewEvent=New Event
calendarsample.properties.DeleteEvent=Delete Event
calendarsample.properties.tip.DeleteEvent=Delete Event

calendarsample.properties.Recurrence=Recurrence…
calendarsample.properties.tip.Recurrence=Recurrence…

calendarsample.properties.confirmation.recurrence.remove.title=Remove the recurrence?
calendarsample.properties.confirmation.recurrence.remove.label=Are you sure you want to remove the recurrence?
calendarsample.properties.button.remove=Remove

# The calendar label: professional or personal 
calendarsample.calendar.Professional=Professional
calendarsample.calendar.Personal=Personal
calendarsample.calendar.multicolumn.checkbox.label=One column per calendar

# past event label
calendarsample.legend.PastEvents=Past events

# label of event properties fields
calendarsample.event.label.Summary=Summary:
calendarsample.event.label.StartTime=Start Time:
calendarsample.event.label.EndTime=End Time:
calendarsample.event.label.AllDay=All Day
calendarsample.event.label.Description=Description:
calendarsample.event.label.Calendar=Calendar:

calendarsample.delete.warning=Are you sure you want to delete the event "{0}"?
calendarsample.delete.recurrent.warning=Are you sure you want to delete all occurrences of the event "{0}"?
calendarsample.delete.warning.plural=Are you sure you want to delete the selected events?
calendarsample.delete.title=Delete the event(s)?

#A button label that means that more element can visible if this button is clicked. 
calendarsample.drillDownRenderer.label=+

calendarsample.recurrence.title=Recurrence

calendarsample.recurrence.ruleeditor.label.Interval=Interval:

# every weekday, that is every of the week except saturday and sunday
calendarsample.recurrence.ruleeditor.label.everyWeekday=Every weekday

calendarsample.recurrence.ruleeditor.first.label=first
calendarsample.recurrence.ruleeditor.second.label=second
calendarsample.recurrence.ruleeditor.third.label=third
calendarsample.recurrence.ruleeditor.fourth.label=fourth
calendarsample.recurrence.ruleeditor.fifth.label=fifth
calendarsample.recurrence.ruleeditor.last.label=last

calendarsample.recurrence.ruleeditor.month.fromStart.label=from the beginning
calendarsample.recurrence.ruleeditor.month.fromEnd.label=from the end

calendarsample.recurrence.ruleeditor.year.fromStart.label=from the beginning
calendarsample.recurrence.ruleeditor.year.fromEnd.label=from the end


# repeat "on" a specific day of week (on Monday)
calendarsample.recurrence.ruleeditor.on.label=On:

# iCalendar is a standard. The editor is manipulating event recurrence rules.
calendarsample.recurrence.ruleeditor.title.iCalendarRecRule=Recurrence Rule

# A recurrence pattern is: every day or week or month etc... 
calendarsample.recurrence.ruleeditor.title.recurrencePattern=Recurrence Pattern

# The recurrence range defines when the recurrence starts and ends 
calendarsample.recurrence.ruleeditor.title.recurrenceRange=Recurrence Range

# Every # day(s) 
# {0}: The text input to enter a number
# The rest of the text will be displayed by label components. 
calendarsample.recurrence.ruleeditor.daily.interval=Every {0} day(s)

# Every #  week(s) 
# {0}: The text input to enter a number
# The rest of the text will be displayed by label components. 
calendarsample.recurrence.ruleeditor.weekly.interval=Every {0} week(s)

# On day # from the start or end of the month 
# {0}: The day # in the month (1 to 31)
# {1}: A choice to determine if the day is from the beginning of the month or from the end
# The fromStart values are defined by:
#   calendarsample.recurrence.ruleeditor.month.fromStart.label 
#   calendarsample.recurrence.ruleeditor.month.fromEnd.label
# The rest of the text will be displayed by label components. 
calendarsample.recurrence.ruleeditor.monthly.choice1=On day {0} {1}

# The first/second/.../last weekday  
# {0}: the first/second/third/fifth/last
# {1}: A week day (sunday, monday ...) 
# The rest of the text will be displayed by label components. 
calendarsample.recurrence.ruleeditor.monthly.choice2=The {0} {1}


# Every #  months(s) 
# {0}: The text input to enter a number
# The rest of the text will be displayed by label components. 
calendarsample.recurrence.ruleeditor.monthly.interval=Every {0} month(s)

# Every #  year(s) 
# {0}: The text input to enter a number
# The rest of the text will be displayed by label components. 
calendarsample.recurrence.ruleeditor.yearly.interval=Every {0} year(s)

# On day # from the start or end of the year 
# {0}: The day # in the month (1 to 366)
# {1}: A choice to determine if the day is from the beginning of the month or from the end
# The fromStart values are defined by:
#   calendarsample.recurrence.ruleeditor.year.fromStart.label 
#   calendarsample.recurrence.ruleeditor.year.fromEnd.label
# The rest of the text will be displayed by label components. 
calendarsample.recurrence.ruleeditor.yearly.choice1=On day {0} {1}

# Every day # of the month  
# {0}: A month label (January, February) etc
# {1}: The day # in the month (1 to 31) 
# The rest of the text will be displayed by label components. 
calendarsample.recurrence.ruleeditor.yearly.choice2=Every {0} {1}


# The first/second/.../last weekday of month m 
# {0}: the first/second/third/fifth/last
# {1}: A week day (sunday, monday ...) 
# {2}: A month label (January, February) etc
# The rest of the text will be displayed by label components. 
calendarsample.recurrence.ruleeditor.yearly.choice3=The {0} {1} of {2}

#@fproject.nopseudo.begin
#@fproject.context.begin

# The format of the week day labels in recurrence editor panels (see DateFormatter documentation)
# ex: Monday, Tuesday... 
calendarsample.recurrence.ruleeditor.weekday.format=EEEE

#@fproject.context.end
#@fproject.nopseudo.end


#@fproject.nopseudo.begin
#@fproject.context.begin
# The format of the month labels in recurrence editor panels (see DateFormatter documentation)
# ex: January, February...
calendarsample.recurrence.ruleeditor.month.format=MMMM
#@fproject.context.end
#@fproject.nopseudo.end


#@fproject.nopseudo.begin
#@fproject.context.begin
# The format of the start time of the recurring event (see DateFormatter documentation)
calendarsample.recurrence.ruleeditor.startTime.format=MMMM D, YYYY, L:NN A
#@fproject.context.end
#@fproject.nopseudo.end


# # of occurrences of a recurrent event 
# {0}: the number of occurrences
# The rest of the text will be displayed by label components. 
calendarsample.recurrence.ruleeditor.count=After {0} occurrence(s)

# End date of a recurrent event 
# {0}: a date chooser
# The rest of the text will be displayed by label components. 
calendarsample.recurrence.ruleeditor.until=Until {0}


# start time of the recurrence 
calendarsample.recurrence.ruleeditor.label.start=Start:

# end time of the recurrence 
calendarsample.recurrence.ruleeditor.label.end=End:

# expert mode that shows more options
calendarsample.recurrence.ruleeditor.expertMode=Expert mode

calendarsample.recurrence.ruleeditor.end.never.label=Never

#Frequency of the recurrence: every day
calendarsample.recurrence.tab.title.daily=Daily

#Frequency of the recurrence: every week
calendarsample.recurrence.tab.title.weekly=Weekly

#Frequency of the recurrence: every month
calendarsample.recurrence.tab.title.monthly=Monthly

#Frequency of the recurrence: every year
calendarsample.recurrence.tab.title.yearly=Yearly

calendarsample.dialog.button.ok=OK
calendarsample.dialog.button.cancel=Cancel

calendarsample.dialog.notification.title=Event Notification

calendarsample.editing.confirm.dialog.title=Modify the recurrence
calendarsample.editing.confirm.dialog.modifySerie=Modify the entire series
calendarsample.editing.confirm.dialog.modifyOccurrence=Modify this particular occurrence

calendarsample.removal.confirm.dialog.title=Remove the recurrence
calendarsample.removal.confirm.dialog.modifySerie=Delete all occurrences of this event
calendarsample.removal.confirm.dialog.modifyOccurrence=Delete this particular occurrence

calendarsample.editing.reassign.dialog.title=Reassign event
# Label of a confirmation dialog when an event is reassigned (for example it was an event of the personal calendar and is reassigned to the professional calendar).
#{0} is the label of the event (ex: "meeting")
#{1} is the name of the calendar (ex: "personal") 
calendarsample.editing.reassign.dialog.label=Reassign the event "{0}" to the calendar "{1}"?

calendarsample.title.help=Help
calendarsample.help.content = To add an event:<ul><li>Select the time and press the <b>Enter</b> key or click the <b>New Event</b> button</li><li>Simply click the <b>New Event</b> button</li><li>Double-click in the calendar sheet</li></ul><br/><p>To move an event, click and drag the event to the desired time.</p><p>To resize an event, click one of its extremities and drag it to adjust its duration.</p><p>To cancel an editing gesture, hold the mouse button down and press the <b>Escape</b> key.</p><br/><p>The properties of the selected event are editable in the right pane.</p><br/><p>The recurrence of the selected event can be set or removed by clicking the <b>Recurrence…</b> button.</p><br/><p>To filter the events of one of the calendars, select/clear the calendars in the calendars panel.</p><br/><p>To navigate in time, select a date on a date picker. To select a range, click a date in a date picker and press Shift and click the end date.</p><p>Use the <b>Day</b>, <b>Work Week</b>, <b>Week</b>, and <b>Month</b> buttons to change the visible time range.<p></p>Use the <b>Today</b> button to go to the current day.</p><p>The Next and Previous buttons set the next or previous time range (day, week, month…).</p><p>Select time while holding the <b>control</b> key to set the visible time range to the selected dates.</p>   

model.summary.meeting=Meeting
model.summary.misc=Misc.
model.summary.training=Training

calendarsample.accordion.dateInterval.title=Date Interval
calendarsample.accordion.advancedProperties.title=Advanced Properties

#####
#
# AdvancedPropertiesPanel
#
####

# Help data tips
calendarsample.advancedPropertiesPanel.displayMode.help = The display mode determines the rendering of the calendar.<br/><br/>It can have the following values:<ul><li>Auto: if the date interval duration is less than or equal to 7 days, use columns display mode, otherwise use grid display mode.</li><li>Columns: always use columns display mode.</li><li>Grid: always use grid display mode.</li></ul>
calendarsample.advancedPropertiesPanel.columnsRendererKindHelp.help = In columns display mode, a data item can be displayed using a vertical renderer or a vertical bar renderer.<br/><br/>You can specify the kind of renderer to use:<ul><li>Default: for a short event, use a vertical renderer and a vertical bar renderer for a long event.</li><li>Vertical renderers: use vertical renderers for all renderers.</li><li>Bar renderers: use vertical bar renderers for all renderers.</li><li>Dynamic: use a bar renderer if the column is less than 100 pixels wide, otherwise use a vertical renderer.</li></ul><br/>Use the <b>rendererKindFunction</b> property to provide a custom function for determining which renderer to use to display this item.
calendarsample.advancedPropertiesPanel.gridRendererKindHelp.help = In grid display mode, a data item can be displayed using a horizontal renderer or label renderer.<br/><br/>You can specify the kind of renderer to use:<ul><li>Default: for a short event, use a label renderer or a horizontal renderer for a long event.</li><li>Horizontal renderers: use horizontal renderers for all renderers.</li><li>Label renderers: use label renderers for all renderers.</li></ul><br/>Use the <b>rendererKindFunction</b> property to provide a custom function for determining the renderer to use to display this item.
calendarsample.advancedPropertiesPanel.horizontalGapHelp.help = The horizontal padding in pixels between the label renderers and between the horizontal renderers if the overlap value is 0.
calendarsample.advancedPropertiesPanel.verticalGapHelp.help = The vertical padding in pixels between the label renderers and between the horizontal renderers if the overlap value is 0.
calendarsample.advancedPropertiesPanel.columnPercentOverlapHelp.help=The percentage of the vertical renderer width used to superimpose one event on another when two events overlap in time.
calendarsample.advancedPropertiesPanel.gridPercentOverlapHelp.help=The percentage of the horizontal renderer height used to superimpose one event on another when two events overlap in time.
calendarsample.advancedPropertiesPanel.barStackingHelp.help = Vertical bar renderers stacking: select or clear.
calendarsample.advancedPropertiesPanel.gridMinMaxHelp.help=The min/max time of day is applied to horizontal renderers only.
calendarsample.advancedPropertiesPanel.timeSlotDurationHelp.help = The duration in minutes of the time slot.<br/><br/> By default, the time slot duration is computed dynamically depending on the projected height of an hour.<br/><br/>Use the <b>timeSlotDurationFunction</b> property to provide a function for customizing the time slot duration.
calendarsample.advancedPropertiesPanel.hiddenDaysOfWeekHelp.help = The days of the week that are not to be displayed in any mode except work week mode.  
calendarsample.advancedPropertiesPanel.workWeekHiddenDaysOfWeekHelp.help = The days of the week to hide in work week mode only.
calendarsample.advancedPropertiesPanel.roundToDayHelp.help = Lay out the horizontal renderer to fill the whole day.
calendarsample.advancedPropertiesPanel.maxNumColumnsHelp.help=The maximum number of columns in columns display mode.
calendarsample.advancedPropertiesPanel.maxNumRowsHelp.help=The maximum number of rows in grid display mode.
calendarsample.advancedPropertiesPanel.dateIntervalStepHelp.help = The number of units (day, work week, week, or month) to display.<br/><br/>For example, to show two work weeks, set a value of 2 and click the work week button.

# A label that is representing a percent value.
# {0} the percent value 
calendarsample.advancedPropertiesPanel.percentValueLabel={0}%

# A label that is representing a size in pixels.
# {0} the value in pixels 
calendarsample.advancedPropertiesPanel.pixelsValueLabel={0} px

# A label that is representing a duration in minutes of the current time slot.
# {0} the value in minutes 
calendarsample.advancedPropertiesPanel.timeSlotValueLabel={0} minutes

#A label that explains that the time slot duration is automatically computed.
calendarsample.advancedPropertiesPanel.defaultTimeSlotValue=Auto

# Title of section 
calendarsample.advancedPropertiesPanel.maxNumColumns=Max columns:

# Title of section 
calendarsample.advancedPropertiesPanel.dateIntervalStep=Steps:

# Title of section 
calendarsample.advancedPropertiesPanel.maxNumRows=Max rows:

# Title of section 
calendarsample.advancedPropertiesPanel.firstDayOfWeek=First Day of Week:

# Title of section
calendarsample.advancedPropertiesPanel.displayMode=Display Mode:

# Title of section
calendarsample.advancedPropertiesPanel.minTimeOfDay=Min Time of Day:

# Title of section
calendarsample.advancedPropertiesPanel.maxTimeOfDay=Max Time of Day:

# Title of section
calendarsample.advancedPropertiesPanel.rendererKind=Renderer Kind:

# Title of section
calendarsample.advancedPropertiesPanel.overlap=Renderers Overlap:

# Title of section
calendarsample.advancedPropertiesPanel.verticalGap=Vertical Gap:

# Title of section
calendarsample.advancedPropertiesPanel.horizontalGap=Horizontal Gap:

# Title of section
calendarsample.advancedPropertiesPanel.timeSlotDuration=Time Slot Duration:

# Title of section
calendarsample.advancedPropertiesPanel.hiddenDaysOfWeek=Hidden Days of Week:

# Title of section
calendarsample.advancedPropertiesPanel.workWeekHiddenDaysOfWeek=Work Week Hidden Days:

# Checkbox label
calendarsample.advancedPropertiesPanel.showItemIndicators=Show item indicators

# Checkbox label
calendarsample.advancedPropertiesPanel.barStacking=Bar stacking

# Checkbox label
calendarsample.advancedPropertiesPanel.roundToDay=Round to day

# Combo box value
calendarsample.advancedPropertiesPanel.displayMode.auto=Auto

# Combo box value
calendarsample.advancedPropertiesPanel.displayMode.columns=Columns

# Combo box value
calendarsample.advancedPropertiesPanel.displayMode.grid=Grid

# Combo box value
calendarsample.advancedPropertiesPanel.rendererKind.default=Default

# Combo box value
calendarsample.advancedPropertiesPanel.rendererKind.vertical=Vertical Renderers

# Combo box value
calendarsample.advancedPropertiesPanel.rendererKind.horizontal=Horizontal Renderers

# Combo box value
calendarsample.advancedPropertiesPanel.rendererKind.label=Label Renderers

# Combo box value
calendarsample.advancedPropertiesPanel.rendererKind.bars = Vertical Bar Renderers

# Combo box value
calendarsample.advancedPropertiesPanel.rendererKind.dynamic=Dynamic

