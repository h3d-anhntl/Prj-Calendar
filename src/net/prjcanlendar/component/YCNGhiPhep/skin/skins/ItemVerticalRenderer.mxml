<?xml version="1.0" encoding="utf-8"?>

<fprj:CalendarRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx"  
					   xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
					   depth="0" depth.selected="1"
					   xmlns:fprj="http://f-project.net/xmlns/fprj/2013">
	
	<fx:Script fb:purpose="styling">
		<![CDATA[
			import net.fproject.utils.ColorUtil;
			
			import mx.utils.ColorUtil;
			static private const contentFill:Array = ["bgFill"];
			
			/**
			 * @private
			 */
			override protected function get backgroundItems():Array {return contentFill;}
			
			static private const borderStroke:Array = ["bStroke"];
			
			/**
			 * @private
			 */
			override protected function get borderItems():Array {return borderStroke;}      
			
			override protected function applyContentBackgroundColorAndAlpha():void {
				super.applyContentBackgroundColorAndAlpha();
				
				var color:uint = bgFill.color;
				bgFill2.color = mx.utils.ColorUtil.adjustBrightness(color, -20);
				bgFill2.alpha = bgFill.alpha;
				
				var rgb:Object = net.fproject.utils.ColorUtil.uintToRGB(color);        
				var l:Number = 0.3 * rgb.r + 0.59 * rgb.g+ 0.11 * rgb.b;        
				var textColor:uint = l>150 ? 0 : 0xffffff;
				labelDisplay.setStyle("color", textColor);
				startTimeLabelDisplay.setStyle("color", textColor);
				beforeIconFill.color = afterIconFill.color = exceptionIconFill.color = occurrenceIconFill.color = textColor;
				if (endTimeLabelDisplay != null) {          
					endTimeLabelDisplay.setStyle("color", textColor);
				}
				
			}
			
			/**
			 * @private
			 */
			override protected function updateData():void {
				super.updateData();
				startLabelGroup.includeInLayout = startTimeLabelDisplay.includeInLayout || occurrenceIcon.includeInLayout;
			}
			
		]]>
	</fx:Script>
	
	<fprj:states>
		<s:State name="normal" />
		<s:State name="hovered" />
		<s:State name="selected" />
		<s:State name="selectedAndHovered" basedOn="selected" />
		<s:State name="edited" basedOn="selected" />
	</fprj:states>  
	
	<!--- @private -->
	<s:Rect id="background" top="0" bottom="0" right="0" left="0" radiusX="5" >   
		<s:fill>
			<!--- @private -->      
			<s:LinearGradient rotation="0">
				<s:GradientEntry id="bgFill" ratio="0.5" />        
				<s:GradientEntry id="bgFill2" ratio="1" />
			</s:LinearGradient>
		</s:fill>
		<s:filters>
			<s:DropShadowFilter alpha="0.3" distance="5" />
		</s:filters>
	</s:Rect>
	
	<s:Rect width="100%" height="100%" top="1" bottom="1" right="1" left="1" radiusX="5" >
		<s:stroke>
			<!--- @private -->
			<s:LinearGradientStroke rotation="90" pixelHinting="true" weight="2">
				<s:GradientEntry color="0xf4e0e0" alpha="0.8" />
				<s:GradientEntry color="0xf4e0e0" alpha="0.4" />
				<s:GradientEntry color="0xF4E0E0" alpha="0" />
			</s:LinearGradientStroke>      
		</s:stroke>
	</s:Rect>
	
	<s:Rect width="100%" height="100%" top="0" bottom="0" right="0" left="0" radiusX="5" >
		<s:stroke>
			<s:SolidColorStroke color="0x000000" pixelHinting="true" />           
		</s:stroke>
	</s:Rect>
	
	<s:Path data="L 200 0 L 200 20 Q 50 50 0 200 L 0 0 Z" width="100%" height="50%" maxHeight="40" left="3" right="3" top="2" >    
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="0xffffff" alpha="0.3" ratio="0" />
				<s:GradientEntry color="0xffffff" alpha="0" ratio="1" />
			</s:LinearGradient>
		</s:fill>
	</s:Path>
	
	<s:VGroup width="100%" height="100%" left="5" right="5" top="5" bottom="5" gap="0" 
			  clipAndEnableScrolling="true" horizontalAlign="center" >
		
		<!--- @copy com.ibm.com.elixir.calendar.supportClasses.CalendarRenderer#beforeIcon -->
		<s:Path id="beforeIcon" horizontalCenter="0" top="0"        
				data="M 0 5 L 5 5 L 3 0 Z">
			<s:fill>
				<s:SolidColor id="beforeIconFill" color="0x000000" />
			</s:fill>
		</s:Path>
		
		<!--- @private -->
		<s:HGroup id="startLabelGroup" width="100%" verticalAlign="middle" paddingTop="1" gap="1" >
			
			<!--- @copy com.ibm.com.elixir.calendar.supportClasses.CalendarRenderer#occurrenceIcon --> 
			<s:Path id="occurrenceIcon" height="100%"              
					data="M 1 6 Q 10 -2 13 8 Q 10 -4 1 6  
					M 14 8 Q 6 18 1 8 Q 6 20 14 8
					M 0 9 L 4 9 L 2 5 L 0 9
					M 10 6 L 14 6 L 12 10 L 10 6" >
				<s:fill>
					<!--- @private -->
					<s:SolidColor id="occurrenceIconFill" color="0x000000" />
				</s:fill>
			</s:Path>
			
			<!--- @copy com.ibm.com.elixir.calendar.supportClasses.CalendarRenderer#exceptionIcon -->
			<s:Path id="exceptionIcon" height="100%"                   
					data="M 1 6 Q 10 -2 13 8 Q 10 -4 1 6  
					M 14 8 Q 6 18 1 8 Q 6 20 14 8
					M 0 9 L 4 9 L 2 5 L 0 9
					M 10 6 L 14 6 L 12 10 L 10 6
					M 0 0 L 15 15 L 13 15 L 0 0
					M 15 0 L 0 15 L 2 15 L 15 0" >
				<s:fill>
					<!--- @private -->
					<s:SolidColor id="exceptionIconFill" color="0x00000" />
				</s:fill>
			</s:Path>
			
			<!--- @copy com.ibm.com.elixir.calendar.skins.spark.supportClasses.CalendarRenderer#startTimeLabelDisplay -->
			<s:Label id="startTimeLabelDisplay" maxDisplayedLines="1" 
					 fontSize="11" fontWeight="bold" />        
			
		</s:HGroup>
		
		<!--- @copy com.ibm.com.elixir.calendar.skins.spark.supportClasses.CalendarRenderer#labelDisplay -->
		<s:Label id="labelDisplay" width="100%" height="100%" fontSize="11" paddingBottom="3" paddingTop="2" />
		
		<!--- @copy com.ibm.com.elixir.calendar.supportClasses.CalendarRenderer#endTimeLabelDisplay -->
		<s:Label id="endTimeLabelDisplay" maxDisplayedLines="1" width="100%" textAlign="left"
				 fontSize="11" fontWeight="bold" includeIn="edited" />
		
		<!--- @copy com.ibm.com.elixir.calendar.supportClasses.CalendarRenderer#afterIcon -->
		<s:Path id="afterIcon"               
				data="M 0 0 L 5 0 L 3 5 Z">
			<s:fill>
				<!--- @private -->
				<s:SolidColor id="afterIconFill" color="0x000000" />
			</s:fill>
		</s:Path>       
		
	</s:VGroup>       
	
</fprj:CalendarRenderer>
